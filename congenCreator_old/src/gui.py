# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# and then adapted for "Creator"


from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
import tkinter
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Label

import congen as cg

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = f'{Path.cwd()}\\assets'


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def generate_name_btn_clicked():
    keys_num = int(keys_num_input.get())
    names_num = int(names_num_input.get())

    cg.name_gen.generate_random(cg.elven, cg.Word(keys_num, names_num))
    display_names()


def display_names():
    show_up = str(cg.name_gen.words_output)
    names_display = Text(master=window, height=10, width=30, bg='#EDDECC')
    names_display.place(x=216, y=188, width=324, height=188)
    names_display.insert(tkinter.END, show_up)


window = Tk()
window.title('Simple CREATOR')

window.geometry("600x400")
window.configure(bg="#FFFFFF")


canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=400,
    width=600,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
bg_with_logo_image = PhotoImage(
    file=relative_to_assets("image_1.png"))
bg_with_logo = canvas.create_image(
    300.0,
    200.0,
    image=bg_with_logo_image
)

keys_num_image = PhotoImage(
    file=relative_to_assets("entry_1.png"))
keys_num_bg = canvas.create_image(
    77.5,
    200.0,
    image=keys_num_image
)
keys_num_input = Entry(
    bd=0,
    bg="#EDDECC",
    fg="#000716",
    highlightthickness=0
)
keys_num_input.place(
    x=55.0,
    y=188.0,
    width=45.0,
    height=22.0
)

names_num_image = PhotoImage(
    file=relative_to_assets("entry_2.png"))
names_num_bg = canvas.create_image(
    156.5,
    200.0,
    image=names_num_image
)
names_num_input = Entry(
    bd=0,
    bg="#EDDECC",
    fg="#000716",
    highlightthickness=0
)
names_num_input.place(
    x=134.0,
    y=188.0,
    width=45.0,
    height=22.0
)

key_input_image = PhotoImage(
    file=relative_to_assets("entry_3.png"))
key_image_bg = canvas.create_image(
    117.0,
    248.0,
    image=key_input_image
)
key_input = Entry(
    bd=0,
    bg="#EDDECC",
    fg="#000716",
    highlightthickness=0
)
key_input.place(
    x=55.0,
    y=236.0,
    width=124.0,
    height=22.0
)

generate_name_btn_image = PhotoImage(
    file=relative_to_assets("button_1.png"))
generate_name_btn = Button(
    image=generate_name_btn_image,
    borderwidth=0,
    highlightthickness=0,
    command=generate_name_btn_clicked,
    relief="flat"
)
generate_name_btn.place(
    x=55.0,
    y=284.0,
    width=124.0,
    height=48.0
)

canvas.create_rectangle(
    216.0,
    188.0,
    540.0,
    332.0,
    fill="#EDDECC",
    outline="")

# noinspection PyTypeChecker
output_label = Label(window, text=display_names(), anchor='nw')
output_label.grid()

canvas.create_text(
    53.0,
    173.0,
    anchor="nw",
    text="N, keys",
    fill="#453E30",
    font=("FreeMono", 12 * -1)
)

canvas.create_text(
    128.0,
    173.0,
    anchor="nw",
    text="N, names",
    fill="#453E30",
    font=("FreeMono", 12 * -1)
)

canvas.create_text(
    60.0,
    220.0,
    anchor="nw",
    text="manual key input",
    fill="#453E30",
    font=("FreeMono", 12 * -1)
)

canvas.create_text(
    285.0,
    168.0,
    anchor="nw",
    text="Generated names are here:",
    fill="#453E30",
    font=("FreeMono", 12 * -1)
)

window.resizable(False, False)
window.mainloop()
